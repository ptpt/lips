Literate Programming Utils
==========================

## Introduction

`lips` is a set of quick-and-dirty utils designed for *inverse
literate programming*, i.e. generating documentation from source
code.

This documentation is generated from
[its source](https://github.com/ptpt/lips/blob/master/README.md.in) by
`lips`.

## Installation

```
$ make install
```

It merely copies `lips/*` to `/usr/local/bin`. If you don't need them
all, feel free to pick only the ones you need.

## Examples

### Source code -> Markdown
We have a JavaScript file `examples/say.js`. Its comments are
written in Markdown.
```javascript
#+sh cat examples/say.js
```

Run the command below, which does 3 things:

1. uncomment all comments in `say.js`
2. highlight the code block, and
3. ignore the test block

```
$ uncomment.awk codeout="highlight.sh javascript" examples/say.js | ignore.awk
```

It outputs a markdown documentation:
```markdown
#+sh uncomment.awk codeout="highlight.sh javascript" examples/say.js | ignore.awk
```

### Include partials
We have a main markdown file `examples/main.md`:
```markdown
#+sh cat examples/main.md
```

Note that the special syntax `\#+sh` is not a markdown syntax; it
tells `lips/sh.awk` that here is a command, please execute the command
and replace here with its output. This file contains two commands `cat
intro.md` and `uncomment.awk say.js ...`.

`intro.md` (it is also located under the folder `examples`) looks like
this:
```markdown
#+sh cat examples/intro.md
```

Include them in `examples/main.md` with one command:
```
$ sh.awk examples/main.md
```

It outputs:
```markdown
#+sh sh.awk examples/main.md
```

## Usages

#+sh for cmd in lips/*; do block.awk name=usage "$cmd" | uncomment.awk comment="#" | sh.awk; done

## Development
Some principles:

- follow KISS
- utilize common UNIX tools such as `awk`, `sed`, `sh`
- not exceed 128 LoC for each little program

LoC of each program:
```
#+sh wc lips/* | sort -n | awk '{sub(/^.*\//, "", $4); printf("%16s %s\n", $4, $1)}'
```

Run tests:
```
sh run_test.sh
```

## License

See LICENSE.
